import json
import string

from aiogram import types, Dispatcher
from aiogram.types import ReplyKeyboardRemove, ContentType

import Profile
import DB
from Creat_Bot import bot
from User_kb import help_keyboard, main_keyboard, start_keyboard, edit_profile_keyboard, \
    edit_profile_keyboard_with_fields, bonus_keyboard


async def process_message(message: types.Message):
    commands = {
        "üëã –°–æ–∑–¥–∞—Ç—å –ê–Ω–∫–µ—Ç—É", "üëã", "‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", "‚ùì", "üìú –ü—Ä–∞–≤–∏–ª–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞", "ü§î –ß—Ç–æ —è –º–æ–≥—É?",
        "üí∞ –ö–æ—à–µ–ª—ë–∫", "üí∞", "‚ù§Ô∏è –í–∑–∞–∏–º–Ω—ã–µ —Å–∏–º–ø–∞—Ç–∏–∏", "‚ù§Ô∏è", "üëÄ –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã", "üëÄ", "üåê –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫", "üåê",
        "üòä –ú–æ—è –∞–Ω–∫–µ—Ç–∞", "üòä", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", "‚úèÔ∏è", "üì∑ –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ",
        "üì∑", "üòÄ –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", "üòÄ", "üéÇ –ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç", "üéÇ", "üåé –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–∞–Ω—É", "üåé", "‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ",
        "‚úçÔ∏è", "‚ùå –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É", "‚ùå", "üÜï –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞", "üÜï", "üéÅ –ë–æ–Ω—É—Å—ã", "üéÅ",
        "‚≠êÔ∏è –ó–≤–µ–∑–¥–∞", "‚≠êÔ∏è", "üí¨ –ù–∞–ø–∏—à–∏ '–ü—Ä–∏–≤–µ—Ç'", "üí¨", "üëë –ü–µ—Ä—Å–æ–Ω–∞ –í–ò–ü", "üëë", "üë§‚Äç –ò–Ω–∫–æ–≥–Ω–∏—Ç–æ", "üë§",
        "üí™üèº –ù–ï–¢ –õ–ò–ú–ò–¢–£! ‚Ä¶ –ü–æ—á—Ç–∏", "üí™üèº", "üè† –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "üè†"
    }

    if message.text in commands:
        await process_commands(message)
    else:
        await process_text_message(message)


async def process_commands(message: types.Message):
    text = message.text
    user_id = message.from_user.id

    if text in ["üëã –°–æ–∑–¥–∞—Ç—å –ê–Ω–∫–µ—Ç—É", "üëã"]:
        if DB.is_user_registered(user_id):
            await message.answer("–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–Ω–∫–µ—Ç–∞, —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë?", reply_markup=ReplyKeyboardRemove())
            await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à –∫–∞–±–∏–Ω–µ—Ç!", reply_markup=main_keyboard)
        else:
            await message.answer("–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?",
                                 reply_markup=ReplyKeyboardRemove())
            await Profile.RegistrationState.name.set()
    elif text in ["‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", "‚ùì"]:
        await message.answer("–í—ã–±–µ—Ä–µ—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å", reply_markup=help_keyboard)
    elif text == ["üìú –ü—Ä–∞–≤–∏–ª–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞", "üìú"]:
        await message.answer("–ó–Ω–∞—á–∏—Ç –ø—Ä–∞–≤–∏–ª –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –Ω–µ –º–Ω–æ–≥–æ):\n1.–ù–µ –≤–∑–¥—É–º–∞–π —Å–∫–∏–¥—ã–≤–∞—Ç—å —Å—é–¥–∞ –ø–æ—à–ª—è—Ç–∏–Ω—É, "
                             "—è –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–ª)\n2.–ë—É–¥—å –≤–µ–∂–ª–∏–≤ , –∏–º–µ–π —É–≤–∞–∂–µ–Ω–∏–µ –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É)\n3.–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª "
                             "—Å—Ç—Ä–æ–≥–æ –Ω–∞–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è , –∞ –µ—Å–ª–∏ —Ç–æ—á–Ω–µ–µ —Ç–æ –≤–∞—Å –ó–∞–±–∞–Ω—è—Ç ")
    elif text == ["ü§î –ß—Ç–æ —è –º–æ–≥—É?", "ü§î"]:
        await message.answer("–£ –º–µ–Ω—è –µ—â–µ –Ω–µ –º–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–πüòî,–Ω–æ —è –º–æ–≥—É –Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–∞–π—Ç–∏ —Ç–µ–±–µ –ø–∞—Ä—É), –∞ –≤–æ–∑–º–æ–∂–Ω–æ –∏ "
                             "–¥–≤–µ –ø–∞—Ä—ã, –∏–ª–∏ –¥–∞–∂–µ —Ç—Ä–∏) –∏–ª–∏ –∑–∞–±–∞–Ω–∏—Ç—å —Ç–µ–±—è –∑–∞ –ø–ª–æ—Ö–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ! –ù–æ —è –Ω–∞–¥–µ—é—Å—å —ç—Ç–æ–≥–æ "
                             "–Ω–µ –±—É–¥–µ—Ç:) ")
    elif text in ["üí∞ –ö–æ—à–µ–ª—ë–∫", "üí∞"]:
        user_id = message.from_user.id
        wallet = DB.get_user_wallet(user_id)
        if wallet is not None:
            response = f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {wallet} –µ–¥–∏–Ω–∏—Ü, —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç?"
        else:
            response = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –≤–∞—Å –Ω–µ—Ç –∫–æ—à–µ–ª—å–∫–∞"
        await message.answer(response)
    elif text in ["‚ù§Ô∏è –í–∑–∞–∏–º–Ω—ã–µ —Å–∏–º–ø–∞—Ç–∏–∏", "‚ù§Ô∏è"]:
        await message.answer("–£ —Ç–µ–±—è –µ—Å—Ç—å –º–æ—è —Å–∏–º–ø–∞—Ç–∏—è üòâ")
    elif text in ["üëÄ –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã", "üëÄ"]:
        await message.answer("–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif text in ["üåê –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫", "üåê"]:
        await message.answer("–Æ –°–ø—ã–∫ –∏–Ω–≥–ª–∏—à?)")
    elif text in ["üè† –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "üè†"]:
        if DB.is_user_registered(user_id):
            await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à –∫–∞–±–∏–Ω–µ—Ç!", reply_markup=main_keyboard)
        else:
            await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=start_keyboard)
    elif text in ["üòä –ú–æ—è –∞–Ω–∫–µ—Ç–∞", "üòä"]:
        profile = DB.get_profile(user_id)
        if profile:
            name, age, gender, country, about, photo, wallet = profile
            text = f"–ò–º—è: {name}\n–í–æ–∑—Ä–∞—Å—Ç: {age}\n–ü–æ–ª: {gender}\n–°—Ç—Ä–∞–Ω–∞: {country}\n" \
                   f"–ë–∞–ª–ª—ã: {wallet}\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ: {about}"
            await bot.send_photo(chat_id=message.chat.id, photo=photo, caption=text, reply_markup=edit_profile_keyboard)
        else:
            text = "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
            await bot.send_message(chat_id=message.chat.id, text=text, reply_markup=main_keyboard)
    elif text in ["‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", "‚úèÔ∏è"]:
        await message.answer("–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?", reply_markup=edit_profile_keyboard_with_fields)
    elif text in ["üì∑ –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ", "üì∑"]:
        await message.answer("–•–æ—Ä–æ—à–æ! –ü—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –≤–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã:", reply_markup=ReplyKeyboardRemove())
        await Profile.Newdata.photo.set()
    elif text in ["üòÄ –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", "üòÄ"]:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –Ω–æ–≤–æ–µ –∏–º—è:")
        await Profile.Newdata.name.set()
    elif text in ["üéÇ –ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç", "üéÇ"]:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ):")
        await Profile.Newdata.age.set()
    elif text in ["üåé –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–∞–Ω—É", "üåé"]:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω—É:")
        await Profile.Newdata.country.set()
    elif text in ["‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", "‚úçÔ∏è"]:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")
        await Profile.Newdata.about.set()
    elif text in ["‚ùå –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É", "‚ùå"]:
        DB.delete_profile(user_id)
        await message.answer("–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.", reply_markup=start_keyboard)
    elif text in ["üÜï –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞", "üÜï"]:
        DB.delete_profile(user_id)
        await message.answer("–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?",
                             reply_markup=ReplyKeyboardRemove())
        await Profile.RegistrationState.name.set()
    elif text in ["üéÅ –ë–æ–Ω—É—Å—ã", "üéÅ"]:
        await message.answer("‚≠êÔ∏è –ó–≤–µ–∑–¥–∞\nüí¨ –ù–∞–ø–∏—à–∏ '–ü—Ä–∏–≤–µ—Ç'\nüëë –ü–µ—Ä—Å–æ–Ω–∞ –í–ò–ü\nüë§ –ò–Ω–∫–æ–≥–Ω–∏—Ç–æ\nüí™üèº –ù–ï–¢ –õ–ò–ú–ò–¢–£! ‚Ä¶ –ü–æ—á—Ç–∏",
                             reply_markup=bonus_keyboard)
    elif text == "‚≠êÔ∏è –ó–≤–µ–∑–¥–∞":
        await message.answer("–ù–∞–¥–µ–ª—è–µ—Ç —Ç–µ–±—è –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–π —É–¥–∞—á–µ–π, –∞–Ω–∫–µ—Ç–∞ –≤—ã–ø–∞–¥–∞–µ—Ç —á–∞—â–µ –∏ –≤—Å–µ–≥–¥–∞ –Ω–∞ –≤–∏–¥—É —Å—Ç–æ–∏–º–æ—Å—Ç—å 600"
                             " –±–∞–ª–ª–æ–≤ —Å—Ä–æ–∫ 7 –¥–Ω–µ–π, 1100 –±–∞–ª–ª–æ–≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –º–µ—Å—è—Ü ")
    elif text == "üí¨ –ù–∞–ø–∏—à–∏ '–ü—Ä–∏–≤–µ—Ç'":
        await message.answer("–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–ª—è —Ç–µ–±—è –Ω–µ —Ç–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∏—Ç—å, –Ω–æ –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–µ–º—É—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "
                             "—Å–æ–æ–±—â–µ–Ω–∏–µ (–°—Ç–æ–∏–º–æ—Å—Ç—å 800 –±–∞–ª–ª–æ–≤ —Å—Ä–æ–∫ 7 –¥–Ω–µ–π, 1500 –±–∞–ª–ª–æ–≤ –∑–∞ –º–µ—Å—è—Ü)")
    elif text == "üëë –ü–µ—Ä—Å–æ–Ω–∞ –í–ò–ü":
        await message.answer("–ü–µ—Ä–µ–¥ –≤–∞–º–∏ –æ—Ç–∫—Ä—ã—Ç—ã –≤—Å–µ –¥–≤–µ—Ä–∏, –≤—Å—ë –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–±–æ—Ä –∞–Ω–∫–µ—Ç, –¥–ª—è –≤–∞—Å –Ω–µ—Ç "
                             "–≥—Ä–∞–Ω–∏—Ü. –í—ã –ø–µ—Ä—Å–æ–Ω–∞ –í–ò–ü)")
    elif text == "üë§‚Äç –ò–Ω–∫–æ–≥–Ω–∏—Ç–æ":
        await message.answer("–í—ã —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã, –∑–∞–≥–∞–¥–æ—á–Ω—ã –∏ –º–æ–∂–µ—Ç–µ —Ä–∞—Å–∫—Ä—ã—Ç—å —Å–≤–æ—é –ª–∏—á–Ω–æ—Å—Ç—å –ª–∏—à—å —Ç–µ–º, –∫–æ–≥–æ –ø–æ—Å—á–∏—Ç–∞–π—Ç–µ"
                             " –¥–æ—Å—Ç–æ–π–Ω—ã–º")
    elif text == "üí™üèº –ù–ï–¢ –õ–ò–ú–ò–¢–£! ‚Ä¶ –ü–æ—á—Ç–∏":
        await message.answer("–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ª–∏–º–∏—Ç –∫–∞–∂–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–º? –î–ª—è —Ç–µ–±—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ "
                             "—É–≤–µ–ª–∏—á—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞–Ω–∫–µ—Ç.")
    else:
        await message.answer("—á—Ç–æ?")


async def process_text_message(message: types.Message):
    if {i.lower().translate(str.maketrans('', '', string.punctuation)) for i in message.text.split(' ')} \
            .intersection(set(json.load(open('Black.json')))) != set():
        await message.reply("–ú–∞—Ç –∑–∞–ø—Ä–µ—â—ë–Ω")
        await message.delete()
    else:
        await message.answer("—á—Ç–æ?")


def register_user(dp: Dispatcher):
    dp.register_message_handler(process_message, content_types=ContentType.TEXT)
